import { MigrationInterface, QueryRunner } from "typeorm";

export class Init1723393797554 implements MigrationInterface {
    name = 'Init1723393797554'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "guid_identity" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_c64ab4deea09322ce6f48f04cf9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "resource_servers" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(32) NOT NULL, "is_system" boolean DEFAULT false, "token_dialect" character varying, "enforce_policies" boolean DEFAULT false, "signing_secret" character varying, "tenant" character varying(36) NOT NULL, "identifier" character varying(36) NOT NULL, "allow_offline_access" boolean, "skip_consent_for_verifiable_first_party_clients" boolean, "token_lifetime" integer, "token_lifetime_for_web" integer, "signing_alg" character varying, "dtime" TIMESTAMP, CONSTRAINT "idx_resource_server_identifier" UNIQUE ("tenant", "identifier"), CONSTRAINT "PK_eb2b9ba8327e20c467d98763250" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "permissions" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "description" character varying NOT NULL, "name" character varying(36) NOT NULL, "resource_server_id" character varying(48) NOT NULL, CONSTRAINT "idx_permission_resource_server" UNIQUE ("resource_server_id", "name"), CONSTRAINT "PK_920331560282b8bd21bb02290df" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "roles" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36) NOT NULL, "name" character varying(32) NOT NULL, "description" text NOT NULL, CONSTRAINT "idx_role_tenant_name" UNIQUE ("tenant", "name"), CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_roles" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36) NOT NULL, "fk_user_id" character varying(80) NOT NULL, "fk_role_id" character varying(48) NOT NULL, CONSTRAINT "idx_user_role" UNIQUE ("tenant", "fk_user_id", "fk_role_id"), CONSTRAINT "PK_976ed8492553e8f0c7795ca7226" PRIMARY KEY ("id", "tenant", "fk_user_id", "fk_role_id"))`);
        await queryRunner.query(`CREATE TABLE "identities" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36), "connection" character varying(36) NOT NULL, "user_id" character varying(64) NOT NULL, "fk_user_id" character varying(80) NOT NULL, "provider" character varying NOT NULL, "is_social" boolean NOT NULL DEFAULT false, "access_token" character varying, "expires_in" integer, "refresh_token" character varying, "profile_data" text, "last_login" TIMESTAMP, CONSTRAINT "idx_identity_conn_uid" UNIQUE ("tenant", "connection", "user_id"), CONSTRAINT "PK_7b2f8cccf4ac6a2d7e6e9e8b1f6" PRIMARY KEY ("id")); COMMENT ON COLUMN "identities"."user_id" IS '这里代表 identity provider/connection 中的用户id, 在 provider 中 唯一'`);
        await queryRunner.query(`CREATE TABLE "groups" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "group_id" character varying(48), "type" character varying(32) NOT NULL DEFAULT 'authok', "tenant" character varying(36) NOT NULL, "outer_id" character varying(64), "order" integer NOT NULL DEFAULT '0', "name" character varying(32) NOT NULL, "description" character varying, "parent_id" character varying(48), CONSTRAINT "idx_tenant_outer_id" UNIQUE ("tenant", "type", "outer_id"), CONSTRAINT "PK_659d1483316afb28afd3a90646e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "user_groups" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "group_id" character varying(48), "tenant" character varying(36), "user_id" character varying(80), CONSTRAINT "PK_ea7760dc75ee1bf0b09ab9b3289" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."users_status_enum" AS ENUM('0', '1', '2', '3')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "user_id" character varying(80) NOT NULL, "password" character varying, "enabled2fa" boolean DEFAULT false, "secret2fa" character varying, "signup_ip" character varying, "last_ip" character varying, "last_login" TIMESTAMP, "tenant" character varying(36) NOT NULL, "description" character varying, "status" "public"."users_status_enum" DEFAULT '2', "register_source" text, "blocked" boolean, "connection" character varying(40) NOT NULL, "signup_at" TIMESTAMP, "user_metadata" text, "app_metadata" text, "username" character varying(32), "name" character varying, "given_name" character varying, "family_name" character varying, "nickname" character varying, "picture" character varying, "website" character varying, "gender" integer, "birthdate" character varying, "zoneinfo" character varying, "locale" character varying, "email" character varying(64), "email_verified" boolean DEFAULT false, "verify_email" boolean, "phone_country_code" character varying(6), "phone_number" character varying(24), "phone_number_verified" boolean DEFAULT false, "address" character varying, "added" TIMESTAMP, "country" character varying, "city" character varying, "province" character varying, "region" character varying, "postal_code" character varying, CONSTRAINT "idx_user_username" UNIQUE ("tenant", "connection", "username"), CONSTRAINT "idx_user_email" UNIQUE ("tenant", "connection", "email"), CONSTRAINT "idx_user_phone" UNIQUE ("tenant", "connection", "phone_number"), CONSTRAINT "idx_user_tenant_user_id" UNIQUE ("tenant", "user_id"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id")); COMMENT ON COLUMN "users"."last_login" IS '最后登录时间'; COMMENT ON COLUMN "users"."signup_at" IS '注册时间，从第三方系统过来的，和 created_at 有区别'; COMMENT ON COLUMN "users"."username" IS 'The user''s username. Only valid if the connection requires a username.'; COMMENT ON COLUMN "users"."name" IS '全名'`);
        await queryRunner.query(`CREATE TABLE "password_history" ("id" uuid NOT NULL DEFAULT gen_random_uuid(), "used_password" character varying NOT NULL, "tenant" character varying(36), "user_id" character varying(80), CONSTRAINT "PK_da65ed4600e5e6bc9315754a8b2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "brandings" ("id" uuid NOT NULL DEFAULT gen_random_uuid(), "logo_url" character varying, "colors" text, CONSTRAINT "PK_517e839e155effa425a6faca357" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organizations" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(32) NOT NULL, "tenant" character varying(36) NOT NULL, "display_name" character varying(32), "metadata" text, "fk_branding_id" uuid, CONSTRAINT "UQ_9b7ca6d30b94fef571cff876884" UNIQUE ("name"), CONSTRAINT "idx_org_uniq_display_name" UNIQUE ("tenant", "display_name"), CONSTRAINT "idx_org_uniq_name" UNIQUE ("tenant", "name"), CONSTRAINT "REL_ab00f9de6dd9a9775c2d94d9dc" UNIQUE ("fk_branding_id"), CONSTRAINT "PK_6b031fcd0863e3f6b44230163f9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization_members" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36) NOT NULL, "org_id" character varying(48) NOT NULL, "fk_user_id" character varying(80) NOT NULL, "user_metadata" text, CONSTRAINT "idx_org_member_org_user_id" UNIQUE ("tenant", "org_id", "fk_user_id"), CONSTRAINT "PK_c2b39d5d072886a4d9c8105eb9a" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization_member_roles" ("tenant" character varying(36) NOT NULL, "member_id" character varying(48) NOT NULL, "role_id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_d0b68b37adbf91ccc3233ed3487" PRIMARY KEY ("member_id", "role_id"))`);
        await queryRunner.query(`CREATE TABLE "client_grants" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "client_id" character varying(32) NOT NULL, "tenant" character varying(36) NOT NULL, "audience" character varying(36) NOT NULL, CONSTRAINT "idx_clientgrant_client_resource_server" UNIQUE ("tenant", "client_id", "audience"), CONSTRAINT "PK_ba696646fd265617c80d0dd94f7" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "clients" ("client_id" character varying(32) NOT NULL, "name" character varying(32) NOT NULL, "icon" character varying, "app_type" character varying(32), "description" character varying, "tenant" character varying(36) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "client_secret" character varying NOT NULL, "grant_types" text, "redirect_uris" text, "response_types" text, "token_endpoint_auth_method" character varying, "logo_uri" character varying, "web_origins" text, "allowed_origins" text, "client_aliases" text, "allowed_clients" text, "allowed_logout_urls" text, "jwt_configuration" text, "encryption_key" text, "form_template" text, "client_metadata" text, "is_first_party" boolean DEFAULT false, "initiate_login_uri" character varying, "oidc_conformant" boolean DEFAULT false, "refresh_token" text, "native_social_login" text, "organization_usage" character varying, "organization_require_behavior" character varying, "addons" text, "mobile" text, "cross_origin_auth" boolean DEFAULT false, "cross_origin_loc" character varying, "sso" boolean DEFAULT true, "sso_disabled" boolean DEFAULT false, "custom_login_page_on" boolean DEFAULT false, "custom_login_page_preview" character varying, "custom_login_page" character varying, "dtime" TIMESTAMP, "id_token_signed_response_alg" character varying NOT NULL DEFAULT 'RS256', "require_auth_time" boolean NOT NULL DEFAULT false, "subject_type" character varying, "revocation_endpoint_auth_method" character varying, "require_signed_request_object" boolean NOT NULL DEFAULT false, "request_uris" text, CONSTRAINT "idx_client_tenant_client_id" UNIQUE ("tenant", "client_id"), CONSTRAINT "idx_client_tenant_name" UNIQUE ("tenant", "name"), CONSTRAINT "PK_49e91f1e368e3f760789e7764aa" PRIMARY KEY ("client_id"))`);
        await queryRunner.query(`CREATE TABLE "connections" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "name" character varying(32) NOT NULL, "display_name" character varying(32), "tenant" character varying(36), "realms" text, "creator" character varying(32), "type" character varying(32), "strategy" character varying(32), "strategy_type" character varying(32), "icon" character varying(256), "options" text, "metadata" text, "is_domain_connection" boolean DEFAULT false, CONSTRAINT "idx_connection_name" UNIQUE ("tenant", "name"), CONSTRAINT "PK_0a1f844af3122354cbd487a8d03" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization_enabled_connections" ("pk_organization_id" character varying(48) NOT NULL, "pk_connection_id" character varying(48) NOT NULL, "assign_membership_on_login" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_74bdb2979077c01e260a930d0d7" PRIMARY KEY ("pk_organization_id", "pk_connection_id"))`);
        await queryRunner.query(`CREATE TABLE "secret_questions" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "text" character varying NOT NULL, CONSTRAINT "PK_68e38adfafbcfe3e4b15f947bd6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "secret_answers" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "answer" character varying NOT NULL, "userId" character varying(48), "secretQuestionId" character varying(48), CONSTRAINT "PK_30105b6729edd0668c54ccbd371" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "metrics" ("tenant" character varying(36) NOT NULL, "key" character varying(32) NOT NULL, "period" character varying(12) NOT NULL, "time" character varying(24) NOT NULL, "value" integer NOT NULL, CONSTRAINT "PK_0e4a1723b6148bdcd14ca97524d" PRIMARY KEY ("tenant", "key", "period", "time"))`);
        await queryRunner.query(`CREATE TABLE "grants" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "fk_user_id" character varying(80) NOT NULL, "tenant" character varying(36) NOT NULL, "client_id" character varying(36) NOT NULL, "resources" text, "openid" text, "rejected" text, "iat" integer, "exp" integer, "data" text, CONSTRAINT "PK_a25f5f89eff8b3277f7969b7094" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "email_templates" ("template" character varying(32) NOT NULL, "tenant" character varying(36) NOT NULL, "body" character varying, "from" character varying NOT NULL, "result_url" character varying, "subject" character varying NOT NULL, "syntax" character varying NOT NULL, "url_lifetime_in_seconds" integer NOT NULL DEFAULT '604800', "include_email_in_redirect" boolean NOT NULL DEFAULT true, "enabled" boolean NOT NULL DEFAULT true, CONSTRAINT "idx_email_template_tenant" UNIQUE ("tenant", "template"), CONSTRAINT "PK_59e21ca043b8cdf77961227ce80" PRIMARY KEY ("template", "tenant"))`);
        await queryRunner.query(`CREATE TABLE "keys" ("kid" uuid NOT NULL DEFAULT gen_random_uuid(), "tenant" character varying, "pkcs8" text, "spki" text, "cert" text, "pkcs7" text, "current" boolean, "next" boolean, "previous" boolean, "current_since" TIMESTAMP, "current_until" TIMESTAMP, "fingerprint" character varying NOT NULL, "thumbprint" character varying NOT NULL, "revoked" boolean NOT NULL DEFAULT false, "revoked_at" TIMESTAMP, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_957370f6bd66abe798026a199bc" PRIMARY KEY ("kid")); COMMENT ON COLUMN "keys"."pkcs8" IS 'The private key of pem format'; COMMENT ON COLUMN "keys"."spki" IS 'The public key of pem format'; COMMENT ON COLUMN "keys"."cert" IS 'The public certificate of the signing key'; COMMENT ON COLUMN "keys"."pkcs7" IS 'The public certificate of the signing key in pkcs7 format'; COMMENT ON COLUMN "keys"."current" IS 'True if the key is the the current key'; COMMENT ON COLUMN "keys"."next" IS 'True if the key is the the next key'; COMMENT ON COLUMN "keys"."previous" IS 'True if the key is the the previous key'; COMMENT ON COLUMN "keys"."current_since" IS 'The date and time when the key became the current key'; COMMENT ON COLUMN "keys"."current_until" IS 'The date and time when the current key was rotated'; COMMENT ON COLUMN "keys"."fingerprint" IS 'The cert fingerprint'; COMMENT ON COLUMN "keys"."thumbprint" IS 'The cert thumbprint'; COMMENT ON COLUMN "keys"."revoked" IS 'True if the key is revoked'; COMMENT ON COLUMN "keys"."revoked_at" IS 'The date and time when the key was revoked'`);
        await queryRunner.query(`CREATE TABLE "devices" ("id" uuid NOT NULL DEFAULT gen_random_uuid(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "created_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_b1514758245c12daf43486dd1f0" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "configs" ("tenant" character varying(36) NOT NULL, "namespace" character varying(32) NOT NULL, "name" character varying(32) NOT NULL, "enabled" boolean NOT NULL DEFAULT true, "value" text, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_75c550c951289b90c9a134fd266" PRIMARY KEY ("tenant", "namespace", "name"))`);
        await queryRunner.query(`CREATE TABLE "invitations" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36) NOT NULL, "invitation_url" character varying(255) NOT NULL, "connection" character varying, "invitee" text NOT NULL, "ticket" character varying(60) NOT NULL, "expires_at" TIMESTAMP NOT NULL, "roles" text NOT NULL, "client_id" character varying(32), "user_id" character varying(80), "org_id" character varying(48), CONSTRAINT "UQ_affbba05a99fadb3c906b3323a3" UNIQUE ("ticket"), CONSTRAINT "PK_5dec98cfdfd562e4ad3648bbb07" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "custom_domains" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "domain" character varying(255) NOT NULL, "primary" boolean NOT NULL, "status" character varying(16) NOT NULL, "type" character varying(16) NOT NULL, "origin_domain_name" character varying(255) NOT NULL, "verification" text NOT NULL, "custom_client_ip_header" character varying(255) NOT NULL, "tls_policy" character varying(64) NOT NULL, CONSTRAINT "PK_53c30715082abb90e5063a2a397" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "replay_detection" ("id" character varying(48) NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_a5d55fc192f0eeb95396017cf34" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "password_reset" ("token" uuid NOT NULL DEFAULT gen_random_uuid(), "user_id" character varying, "tenant" character varying, "initializer_ip" character varying, "created_at" TIMESTAMP, "expires_at" TIMESTAMP, CONSTRAINT "PK_36e929b98372d961bb63bd4b4e9" PRIMARY KEY ("token"))`);
        await queryRunner.query(`CREATE TABLE "interaction" ("id" character varying NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, "grantId" character varying, CONSTRAINT "PK_9204371ccb2c9dab5428b406413" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "registration_access_tokens" ("id" character varying(48) NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_85af9e4049d16b684f76c6c6c95" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "pushed_authz_request" ("id" character varying(48) NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_17f5159da505e8fc53dd7b27ce3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "device_codes" ("id" character varying(48) NOT NULL, "grantId" character varying(48), "userCode" character varying, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_911924a15b4b5f571ede85d0ddb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "client_credentials" ("id" character varying(48) NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_abd8de48912b01e7ba58724272f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "authorization_codes" ("id" character varying NOT NULL, "grantId" character varying, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_f05b2eb99ad2db12d87544656c4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "initial_access_tokens" ("id" character varying(48) NOT NULL, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_a28f9e6cd5c339429c4ea382b69" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "refresh_tokens" ("id" character varying NOT NULL, "grantId" character varying, "data" text, "expiresAt" character varying, "consumedAt" character varying, CONSTRAINT "PK_7d8bee0204106019488c4c50ffa" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "triggers" ("id" character varying(48) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36) NOT NULL, "display_name" character varying(32) NOT NULL, "version" character varying, "runtimes" text, "default_runtime" character varying(32) NOT NULL, "status" character varying NOT NULL, CONSTRAINT "idx_trigger_tenant_id" UNIQUE ("tenant", "id"), CONSTRAINT "PK_b79cd74931078bf1f2d7f572a73" PRIMARY KEY ("id", "tenant"))`);
        await queryRunner.query(`CREATE TABLE "actions" ("id" uuid NOT NULL DEFAULT gen_random_uuid(), "tenant" character varying(36) NOT NULL, "name" character varying(32) NOT NULL, "code" text, "dependencies" text, "runtime" character varying, "secrets" text, "installed_integration_id" character varying(48), "status" character varying(12) DEFAULT 'pending', "all_changes_deployed" boolean NOT NULL DEFAULT false, "built_at" TIMESTAMP, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "idx_action_tenant_name" UNIQUE ("tenant", "name"), CONSTRAINT "PK_7bfb822f56be449c0b8adbf83cf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "trigger_bindings" ("id" uuid NOT NULL DEFAULT gen_random_uuid(), "display_name" character varying NOT NULL, "index" integer NOT NULL DEFAULT '0', "trigger_id" character varying NOT NULL, "action_id" uuid NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "tenant" character varying(36), CONSTRAINT "PK_6656d063b8878d43983dd4a200b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "access_tokens" ("id" character varying NOT NULL, "grantId" character varying, "data" text, "clientId" character varying(128), "accountGuid" character varying(128), "expiresAt" TIMESTAMP, "consumedAt" TIMESTAMP, "added" TIMESTAMP, CONSTRAINT "PK_65140f59763ff994a0252488166" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "role_permissions" ("permission_id" character varying(48) NOT NULL, "role_id" character varying(48) NOT NULL, CONSTRAINT "PK_25d24010f53bb80b78e412c9656" PRIMARY KEY ("permission_id", "role_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_17022daf3f885f7d35423e9971" ON "role_permissions" ("permission_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_178199805b901ccd220ab7740e" ON "role_permissions" ("role_id") `);
        await queryRunner.query(`CREATE TABLE "user_permissions" ("tenant" character varying(36) NOT NULL, "user_id" character varying(80) NOT NULL, "permission_id" character varying(48) NOT NULL, CONSTRAINT "PK_f2e7ceba2ba3f21cb672ad35082" PRIMARY KEY ("tenant", "user_id", "permission_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_cf73c4e1ac48c2a686d07fd801" ON "user_permissions" ("tenant", "user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_8145f5fadacd311693c15e41f1" ON "user_permissions" ("permission_id") `);
        await queryRunner.query(`CREATE TABLE "client_grant_permissions" ("client_grant_id" character varying(48) NOT NULL, "permission_id" character varying(48) NOT NULL, CONSTRAINT "PK_e097ba16f9bb601f5288adb68c1" PRIMARY KEY ("client_grant_id", "permission_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_269dfc5344f2627d7dde3d209d" ON "client_grant_permissions" ("client_grant_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_82be389b75abca1fd69d68e9e0" ON "client_grant_permissions" ("permission_id") `);
        await queryRunner.query(`CREATE TABLE "client_connections" ("client_id" character varying(32) NOT NULL, "connection_id" character varying(48) NOT NULL, CONSTRAINT "PK_0a4c3fffaa3839bd8d7fbb394bd" PRIMARY KEY ("client_id", "connection_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8e3affd3f710d78119a30ecc5b" ON "client_connections" ("client_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_62d5416cf22949a936dc52c7e3" ON "client_connections" ("connection_id") `);
        await queryRunner.query(`CREATE TABLE "action_supported_triggers" ("action_id" uuid NOT NULL, "tenant" character varying(36) NOT NULL, "trigger_id" character varying(48) NOT NULL, CONSTRAINT "PK_34ef23e323324563759021828f1" PRIMARY KEY ("action_id", "tenant", "trigger_id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_12a1a80cdeddb1882cb14f2070" ON "action_supported_triggers" ("action_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_151f39f8dcce49ed901be72a5d" ON "action_supported_triggers" ("tenant", "trigger_id") `);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP CONSTRAINT "PK_c64ab4deea09322ce6f48f04cf9"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "id" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD CONSTRAINT "PK_c64ab4deea09322ce6f48f04cf9" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "permissions" ADD CONSTRAINT "FK_2effb0f5c382564398dda7d81ca" FOREIGN KEY ("resource_server_id") REFERENCES "resource_servers"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_1f1ecf0dca7c8b156234eab7add" FOREIGN KEY ("fk_role_id") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_roles" ADD CONSTRAINT "FK_3f7e690d282560177f0328160b6" FOREIGN KEY ("tenant", "fk_user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "identities" ADD CONSTRAINT "FK_004a965d5e33d161f184590b8a8" FOREIGN KEY ("tenant", "fk_user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "groups" ADD CONSTRAINT "FK_d768ea35a407c2ba9c0b038b613" FOREIGN KEY ("parent_id") REFERENCES "groups"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_groups" ADD CONSTRAINT "FK_4c5f2c23c34f3921fbad2cd3940" FOREIGN KEY ("group_id") REFERENCES "groups"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_groups" ADD CONSTRAINT "FK_9efc072dea99471b31c8cf3bb29" FOREIGN KEY ("tenant", "user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "password_history" ADD CONSTRAINT "FK_cc4c5091e06f275e3697762dd68" FOREIGN KEY ("tenant", "user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organizations" ADD CONSTRAINT "FK_ab00f9de6dd9a9775c2d94d9dc7" FOREIGN KEY ("fk_branding_id") REFERENCES "brandings"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_fd8ec3efd79b2ee163cf98edd8c" FOREIGN KEY ("org_id") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organization_members" ADD CONSTRAINT "FK_8608a7c799c2670b7df4eaeb38d" FOREIGN KEY ("tenant", "fk_user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organization_member_roles" ADD CONSTRAINT "FK_e447eaa9e3f84a455d2b92c913e" FOREIGN KEY ("member_id") REFERENCES "organization_members"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organization_member_roles" ADD CONSTRAINT "FK_8649b074f3877a1371a624695b1" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "client_grants" ADD CONSTRAINT "FK_ba88ee21d564eb0034e317c19df" FOREIGN KEY ("client_id") REFERENCES "clients"("client_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "client_grants" ADD CONSTRAINT "FK_215420b87de0c8335538772d6b3" FOREIGN KEY ("tenant", "audience") REFERENCES "resource_servers"("tenant","identifier") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organization_enabled_connections" ADD CONSTRAINT "FK_2f06a539d6c028dcc97a84f4f2b" FOREIGN KEY ("pk_organization_id") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "organization_enabled_connections" ADD CONSTRAINT "FK_c8f378591925c0c574547168727" FOREIGN KEY ("pk_connection_id") REFERENCES "connections"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "secret_answers" ADD CONSTRAINT "FK_dbc43a95f51eb69cfa492e8f9c0" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "secret_answers" ADD CONSTRAINT "FK_874324d59167a3a7594adbffbc7" FOREIGN KEY ("secretQuestionId") REFERENCES "secret_questions"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "grants" ADD CONSTRAINT "FK_a03224d2a0bbb67c58e1c0b46c4" FOREIGN KEY ("tenant", "fk_user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "grants" ADD CONSTRAINT "FK_b3f19f63cb7739c57ef17899fb3" FOREIGN KEY ("client_id") REFERENCES "clients"("client_id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invitations" ADD CONSTRAINT "FK_b3ca92622941bab607e687b3e3a" FOREIGN KEY ("client_id") REFERENCES "clients"("client_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invitations" ADD CONSTRAINT "FK_be32e0add2e8736859c757017cb" FOREIGN KEY ("tenant", "user_id") REFERENCES "users"("tenant","user_id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invitations" ADD CONSTRAINT "FK_5267611dcc50f78999dbf54f461" FOREIGN KEY ("org_id") REFERENCES "organizations"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "trigger_bindings" ADD CONSTRAINT "FK_098085a9aee41614d1ab320b8c4" FOREIGN KEY ("tenant", "trigger_id") REFERENCES "triggers"("tenant","id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "trigger_bindings" ADD CONSTRAINT "FK_23794fca7b71013d12ce3f5b693" FOREIGN KEY ("action_id") REFERENCES "actions"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_permissions" ADD CONSTRAINT "FK_17022daf3f885f7d35423e9971e" FOREIGN KEY ("permission_id") REFERENCES "permissions"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "role_permissions" ADD CONSTRAINT "FK_178199805b901ccd220ab7740ec" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_permissions" ADD CONSTRAINT "FK_cf73c4e1ac48c2a686d07fd8012" FOREIGN KEY ("tenant", "user_id") REFERENCES "users"("tenant","user_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "user_permissions" ADD CONSTRAINT "FK_8145f5fadacd311693c15e41f10" FOREIGN KEY ("permission_id") REFERENCES "permissions"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "client_grant_permissions" ADD CONSTRAINT "FK_269dfc5344f2627d7dde3d209dc" FOREIGN KEY ("client_grant_id") REFERENCES "client_grants"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "client_grant_permissions" ADD CONSTRAINT "FK_82be389b75abca1fd69d68e9e0a" FOREIGN KEY ("permission_id") REFERENCES "permissions"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "client_connections" ADD CONSTRAINT "FK_8e3affd3f710d78119a30ecc5be" FOREIGN KEY ("client_id") REFERENCES "clients"("client_id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "client_connections" ADD CONSTRAINT "FK_62d5416cf22949a936dc52c7e39" FOREIGN KEY ("connection_id") REFERENCES "connections"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "action_supported_triggers" ADD CONSTRAINT "FK_12a1a80cdeddb1882cb14f20705" FOREIGN KEY ("action_id") REFERENCES "actions"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "action_supported_triggers" ADD CONSTRAINT "FK_151f39f8dcce49ed901be72a5dc" FOREIGN KEY ("tenant", "trigger_id") REFERENCES "triggers"("tenant","id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "action_supported_triggers" DROP CONSTRAINT "FK_151f39f8dcce49ed901be72a5dc"`);
        await queryRunner.query(`ALTER TABLE "action_supported_triggers" DROP CONSTRAINT "FK_12a1a80cdeddb1882cb14f20705"`);
        await queryRunner.query(`ALTER TABLE "client_connections" DROP CONSTRAINT "FK_62d5416cf22949a936dc52c7e39"`);
        await queryRunner.query(`ALTER TABLE "client_connections" DROP CONSTRAINT "FK_8e3affd3f710d78119a30ecc5be"`);
        await queryRunner.query(`ALTER TABLE "client_grant_permissions" DROP CONSTRAINT "FK_82be389b75abca1fd69d68e9e0a"`);
        await queryRunner.query(`ALTER TABLE "client_grant_permissions" DROP CONSTRAINT "FK_269dfc5344f2627d7dde3d209dc"`);
        await queryRunner.query(`ALTER TABLE "user_permissions" DROP CONSTRAINT "FK_8145f5fadacd311693c15e41f10"`);
        await queryRunner.query(`ALTER TABLE "user_permissions" DROP CONSTRAINT "FK_cf73c4e1ac48c2a686d07fd8012"`);
        await queryRunner.query(`ALTER TABLE "role_permissions" DROP CONSTRAINT "FK_178199805b901ccd220ab7740ec"`);
        await queryRunner.query(`ALTER TABLE "role_permissions" DROP CONSTRAINT "FK_17022daf3f885f7d35423e9971e"`);
        await queryRunner.query(`ALTER TABLE "trigger_bindings" DROP CONSTRAINT "FK_23794fca7b71013d12ce3f5b693"`);
        await queryRunner.query(`ALTER TABLE "trigger_bindings" DROP CONSTRAINT "FK_098085a9aee41614d1ab320b8c4"`);
        await queryRunner.query(`ALTER TABLE "invitations" DROP CONSTRAINT "FK_5267611dcc50f78999dbf54f461"`);
        await queryRunner.query(`ALTER TABLE "invitations" DROP CONSTRAINT "FK_be32e0add2e8736859c757017cb"`);
        await queryRunner.query(`ALTER TABLE "invitations" DROP CONSTRAINT "FK_b3ca92622941bab607e687b3e3a"`);
        await queryRunner.query(`ALTER TABLE "grants" DROP CONSTRAINT "FK_b3f19f63cb7739c57ef17899fb3"`);
        await queryRunner.query(`ALTER TABLE "grants" DROP CONSTRAINT "FK_a03224d2a0bbb67c58e1c0b46c4"`);
        await queryRunner.query(`ALTER TABLE "secret_answers" DROP CONSTRAINT "FK_874324d59167a3a7594adbffbc7"`);
        await queryRunner.query(`ALTER TABLE "secret_answers" DROP CONSTRAINT "FK_dbc43a95f51eb69cfa492e8f9c0"`);
        await queryRunner.query(`ALTER TABLE "organization_enabled_connections" DROP CONSTRAINT "FK_c8f378591925c0c574547168727"`);
        await queryRunner.query(`ALTER TABLE "organization_enabled_connections" DROP CONSTRAINT "FK_2f06a539d6c028dcc97a84f4f2b"`);
        await queryRunner.query(`ALTER TABLE "client_grants" DROP CONSTRAINT "FK_215420b87de0c8335538772d6b3"`);
        await queryRunner.query(`ALTER TABLE "client_grants" DROP CONSTRAINT "FK_ba88ee21d564eb0034e317c19df"`);
        await queryRunner.query(`ALTER TABLE "organization_member_roles" DROP CONSTRAINT "FK_8649b074f3877a1371a624695b1"`);
        await queryRunner.query(`ALTER TABLE "organization_member_roles" DROP CONSTRAINT "FK_e447eaa9e3f84a455d2b92c913e"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_8608a7c799c2670b7df4eaeb38d"`);
        await queryRunner.query(`ALTER TABLE "organization_members" DROP CONSTRAINT "FK_fd8ec3efd79b2ee163cf98edd8c"`);
        await queryRunner.query(`ALTER TABLE "organizations" DROP CONSTRAINT "FK_ab00f9de6dd9a9775c2d94d9dc7"`);
        await queryRunner.query(`ALTER TABLE "password_history" DROP CONSTRAINT "FK_cc4c5091e06f275e3697762dd68"`);
        await queryRunner.query(`ALTER TABLE "user_groups" DROP CONSTRAINT "FK_9efc072dea99471b31c8cf3bb29"`);
        await queryRunner.query(`ALTER TABLE "user_groups" DROP CONSTRAINT "FK_4c5f2c23c34f3921fbad2cd3940"`);
        await queryRunner.query(`ALTER TABLE "groups" DROP CONSTRAINT "FK_d768ea35a407c2ba9c0b038b613"`);
        await queryRunner.query(`ALTER TABLE "identities" DROP CONSTRAINT "FK_004a965d5e33d161f184590b8a8"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_3f7e690d282560177f0328160b6"`);
        await queryRunner.query(`ALTER TABLE "user_roles" DROP CONSTRAINT "FK_1f1ecf0dca7c8b156234eab7add"`);
        await queryRunner.query(`ALTER TABLE "permissions" DROP CONSTRAINT "FK_2effb0f5c382564398dda7d81ca"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP CONSTRAINT "PK_c64ab4deea09322ce6f48f04cf9"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "id"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "id" character varying(48) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD CONSTRAINT "PK_c64ab4deea09322ce6f48f04cf9" PRIMARY KEY ("id")`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "guid_identity" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`DROP INDEX "public"."IDX_151f39f8dcce49ed901be72a5d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_12a1a80cdeddb1882cb14f2070"`);
        await queryRunner.query(`DROP TABLE "action_supported_triggers"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_62d5416cf22949a936dc52c7e3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8e3affd3f710d78119a30ecc5b"`);
        await queryRunner.query(`DROP TABLE "client_connections"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_82be389b75abca1fd69d68e9e0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_269dfc5344f2627d7dde3d209d"`);
        await queryRunner.query(`DROP TABLE "client_grant_permissions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8145f5fadacd311693c15e41f1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cf73c4e1ac48c2a686d07fd801"`);
        await queryRunner.query(`DROP TABLE "user_permissions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_178199805b901ccd220ab7740e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_17022daf3f885f7d35423e9971"`);
        await queryRunner.query(`DROP TABLE "role_permissions"`);
        await queryRunner.query(`DROP TABLE "access_tokens"`);
        await queryRunner.query(`DROP TABLE "trigger_bindings"`);
        await queryRunner.query(`DROP TABLE "actions"`);
        await queryRunner.query(`DROP TABLE "triggers"`);
        await queryRunner.query(`DROP TABLE "refresh_tokens"`);
        await queryRunner.query(`DROP TABLE "initial_access_tokens"`);
        await queryRunner.query(`DROP TABLE "authorization_codes"`);
        await queryRunner.query(`DROP TABLE "client_credentials"`);
        await queryRunner.query(`DROP TABLE "device_codes"`);
        await queryRunner.query(`DROP TABLE "pushed_authz_request"`);
        await queryRunner.query(`DROP TABLE "registration_access_tokens"`);
        await queryRunner.query(`DROP TABLE "interaction"`);
        await queryRunner.query(`DROP TABLE "password_reset"`);
        await queryRunner.query(`DROP TABLE "replay_detection"`);
        await queryRunner.query(`DROP TABLE "custom_domains"`);
        await queryRunner.query(`DROP TABLE "invitations"`);
        await queryRunner.query(`DROP TABLE "configs"`);
        await queryRunner.query(`DROP TABLE "devices"`);
        await queryRunner.query(`DROP TABLE "keys"`);
        await queryRunner.query(`DROP TABLE "email_templates"`);
        await queryRunner.query(`DROP TABLE "grants"`);
        await queryRunner.query(`DROP TABLE "metrics"`);
        await queryRunner.query(`DROP TABLE "secret_answers"`);
        await queryRunner.query(`DROP TABLE "secret_questions"`);
        await queryRunner.query(`DROP TABLE "organization_enabled_connections"`);
        await queryRunner.query(`DROP TABLE "connections"`);
        await queryRunner.query(`DROP TABLE "clients"`);
        await queryRunner.query(`DROP TABLE "client_grants"`);
        await queryRunner.query(`DROP TABLE "organization_member_roles"`);
        await queryRunner.query(`DROP TABLE "organization_members"`);
        await queryRunner.query(`DROP TABLE "organizations"`);
        await queryRunner.query(`DROP TABLE "brandings"`);
        await queryRunner.query(`DROP TABLE "password_history"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_status_enum"`);
        await queryRunner.query(`DROP TABLE "user_groups"`);
        await queryRunner.query(`DROP TABLE "groups"`);
        await queryRunner.query(`DROP TABLE "identities"`);
        await queryRunner.query(`DROP TABLE "user_roles"`);
        await queryRunner.query(`DROP TABLE "roles"`);
        await queryRunner.query(`DROP TABLE "permissions"`);
        await queryRunner.query(`DROP TABLE "resource_servers"`);
        await queryRunner.query(`DROP TABLE "guid_identity"`);
    }

}
